name: QA Production Pipeline

run-name: Deploy triggered by @${{ github.actor }} for branch ${{ github.ref_name }}

on:
  pull_request:
    branches:
      - master

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
      uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run Unit Tests
        run: npm run test

  integration-tests:
    runs-on: ubuntu-latest
    
    environment: production
    
    env:
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      DATABASE_URL: postgres://${{ secrets.POSTGRES_USER }}:${{ secrets.POSTGRES_PASSWORD }}@localhost:5432/${{ secrets.POSTGRES_DB }}
    
    services:
      postgres:
        image: postgres:15
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U ${{ secrets.POSTGRES_USER }}"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install
        
      - name: Generate Prisma Client
        run: npx prisma generate

      - name: Wait for PostgreSQL to be ready
        run: |
          until pg_isready -h localhost -p 5432 -U $POSTGRES_USER; do
            echo "Waiting for PostgreSQL..."
            sleep 2
          done

      - name: Apply Migrations
        run: npx prisma migrate deploy

      - name: Seed Database
        run: npx prisma db seed

      - name: Run Integration Tests
        run: npm run test:e2e